{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Field-Benders-Website-Re\\\\client\\\\src\\\\components\\\\Chapters\\\\Chapter\\\\ControlPanel\\\\MusicPanel.js\";\nimport React, { useState, useRef } from 'react';\nimport { Typography, Grid, Container } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/icons/ListOutlined';\nimport ListIcon from '@material-ui/icons/List';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useStyles from './styles';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport Player, { useAudio } from '../../../Player/Player';\nconst MusicPanel = _ref => {\n  let {\n    track = 'none',\n    musicPlayer,\n    trackMap\n  } = _ref;\n  const classes = useStyles();\n  const playButtonRef = useRef();\n\n  //use a json file which maps the locations of mp3's to a name\n  const [song, changeTrack] = useState(new Audio(track));\n  const [songStatus, changeSongStatus] = useState('play');\n\n  //const [playing, toggle] = useAudio(track);\n\n  const handleChange = (event, state) => {};\n  const handlePlayClick = event => {\n    let playButtonState = playButtonRef.current.value;\n    console.log(`${song} set to ${playButtonState}`);\n    if (playButtonState == 'play') {\n      changeSongStatus('pause');\n    } else changeSongStatus('play');\n\n    /**\r\n     playButtonState = playButtonState == 'play' ? (\r\n         playButtonState == 'pause';\r\n         console.log('Play button state was changed to pause.');\r\n     ) : ();\r\n     * \r\n     */\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: {\n      xs: 'column',\n      md: 'row',\n      lg: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Music Status: \", songStatus), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Track Title: \", song), /*#__PURE__*/React.createElement(Player, {\n    url: track,\n    wrappedPlayer: /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      orientation: \"horizontal\",\n      value: \"default\",\n      exclusive: true,\n      onChange: handleChange,\n      className: classes.playControls,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      value: songStatus,\n      onClick: handlePlayClick,\n      ref: playButtonRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, songStatus == 'play' ? /*#__PURE__*/React.createElement(PlayArrow, {\n      sx: {\n        width: 'inherit',\n        color: 'black'\n      },\n      fontSize: \"small\",\n      htmlColor: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(Pause, {\n      fontSize: \"small\",\n      htmlColor: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 32\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }))));\n};\nexport default MusicPanel;\n\n/**\r\n * \r\n * \r\n         <Grid container direction={{xs:'column', md:'row'}} spacing={2}>\r\n            <Typography variant='body1' align='center'>Music Status: {songStatus}</Typography>\r\n            <Typography variant='body1' align= 'center'>Track Title: {song}</Typography>\r\n            <ToggleButtonGroup\r\n            orientation='horizontal'\r\n            value='default'\r\n            exclusive\r\n            onChange={handleChange}\r\n            className={classes.playControls}>\r\n                <ToggleButton value=\"play\" >\r\n                    <PlayArrow sx={{width:'inherit', color:'black'}} fontSize='small' htmlColor='blue'/>\r\n                </ToggleButton>\r\n                <ToggleButton value=\"pause\" >\r\n                    <Pause fontSize='small' htmlColor='blue'/>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n\r\n        </Grid>\r\n\r\n */","map":{"version":3,"names":["React","useState","useRef","Typography","Grid","Container","ListItemIcon","ListIcon","PlayArrow","Pause","useDispatch","useHistory","useLocation","useStyles","ToggleButton","ToggleButtonGroup","Player","useAudio","MusicPanel","track","musicPlayer","trackMap","classes","playButtonRef","song","changeTrack","Audio","songStatus","changeSongStatus","handleChange","event","state","handlePlayClick","playButtonState","current","value","console","log","xs","md","lg","playControls","width","color"],"sources":["D:/Documents/Field-Benders-Website-Re/client/src/components/Chapters/Chapter/ControlPanel/MusicPanel.js"],"sourcesContent":["\r\nimport React, {useState, useRef} from 'react';\r\n\r\nimport { Typography, Grid, Container} from '@material-ui/core';\r\n\r\nimport ListItemIcon from '@material-ui/icons/ListOutlined';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport PlayArrow from'@material-ui/icons/PlayArrow';\r\nimport Pause from '@material-ui/icons/Pause';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\nimport useStyles from './styles';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nimport Player, {useAudio} from '../../../Player/Player';\r\n\r\n\r\nconst MusicPanel = ({track='none', musicPlayer, trackMap}) => {\r\n    const classes = useStyles();\r\n    const playButtonRef = useRef();\r\n\r\n    //use a json file which maps the locations of mp3's to a name\r\n    const [song, changeTrack] = useState(new Audio(track));\r\n    const [songStatus, changeSongStatus] = useState('play');\r\n\r\n\r\n    //const [playing, toggle] = useAudio(track);\r\n\r\n    const handleChange = (event, state) => {\r\n        \r\n    }\r\n\r\n    \r\n    const handlePlayClick = (event) => {\r\n\r\n        let playButtonState = playButtonRef.current.value;\r\n        console.log(`${song} set to ${playButtonState}`);\r\n        if (playButtonState == 'play') {\r\n            changeSongStatus('pause');\r\n            \r\n        }\r\n        else changeSongStatus('play');\r\n\r\n        \r\n        \r\n        /**\r\n         playButtonState = playButtonState == 'play' ? (\r\n             playButtonState == 'pause';\r\n             console.log('Play button state was changed to pause.');\r\n         ) : ();\r\n         * \r\n         */\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n\r\n        <Container >\r\n            <Grid container direction={{xs: 'column', md: 'row', lg: 'row'}} >\r\n\r\n                <Typography variant='body1' align='center'>Music Status: {songStatus}</Typography>\r\n                <Typography variant='body1' align= 'center'>Track Title: {song}</Typography>\r\n                \r\n                <Player url={track} wrappedPlayer={\r\n                    \r\n                    <ToggleButtonGroup\r\n                    orientation='horizontal'\r\n                    value='default'\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                    className={classes.playControls}>\r\n                    \r\n                        <ToggleButton  value={songStatus} onClick={handlePlayClick} ref={playButtonRef}>\r\n                            \r\n                            {songStatus == 'play' ? (\r\n                                <PlayArrow sx={{width:'inherit', color:'black'}} fontSize='small' htmlColor='blue'/>\r\n                            ):(<Pause fontSize='small' htmlColor='blue'/ >\r\n                            )}\r\n\r\n                        </ToggleButton>\r\n                                    \r\n                    </ToggleButtonGroup>\r\n                }/>\r\n            \r\n            </Grid>\r\n\r\n        </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MusicPanel;\r\n\r\n/**\r\n * \r\n * \r\n         <Grid container direction={{xs:'column', md:'row'}} spacing={2}>\r\n            <Typography variant='body1' align='center'>Music Status: {songStatus}</Typography>\r\n            <Typography variant='body1' align= 'center'>Track Title: {song}</Typography>\r\n            <ToggleButtonGroup\r\n            orientation='horizontal'\r\n            value='default'\r\n            exclusive\r\n            onChange={handleChange}\r\n            className={classes.playControls}>\r\n                <ToggleButton value=\"play\" >\r\n                    <PlayArrow sx={{width:'inherit', color:'black'}} fontSize='small' htmlColor='blue'/>\r\n                </ToggleButton>\r\n                <ToggleButton value=\"pause\" >\r\n                    <Pause fontSize='small' htmlColor='blue'/>\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n\r\n        </Grid>\r\n\r\n */"],"mappings":"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"},"metadata":{},"sourceType":"module"}