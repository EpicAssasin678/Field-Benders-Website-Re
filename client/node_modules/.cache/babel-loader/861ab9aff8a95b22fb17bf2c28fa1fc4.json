{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Field-Benders-Website-Re\\\\client\\\\src\\\\components\\\\Chapters\\\\Chapter\\\\ControlPanel\\\\MediaInspector\\\\MediaInspector.js\";\nimport React, { useState } from 'react';\nimport { Typography, Fade, CardActionArea, CardMedia, Card, CardContent } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/icons/ListOutlined';\nimport ListIcon from '@material-ui/icons/List';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport useStyles from '../styles';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\n\n//TODO implement map -> (name, path, alt) => cards\n\n//TODO eventually implement mapping option for media to be selected from the db and load alt and title from there\n\n/**\r\n * \r\n * @param {*} media map filtered of form => [name, mediaSS, path, alt, type, description]\r\n * \r\n * @returns \r\n * @notes Could eventually support more than just image media\r\n */\n\nconst MediaInspector = _ref => {\n  let {\n    media,\n    tabAnchor\n  } = _ref;\n  //cards with images and subtext over them, on hover tehy read alt text, on click they expand into the center\n  //media (name, path, alt) => props. name\n\n  //let anchor = tabAnchor;\n  const loadImages = map => {\n    console.log(map);\n    //if !SSR\n\n    let mediaArea = /*#__PURE__*/React.createElement(React.Fragment, null);\n    map.map(media => {\n      if (!media.serverSide) {\n        console.log(mediaArea);\n        mediaArea = [/*#__PURE__*/React.createElement(Card, {\n          sx: {\n            maxWidth: 345\n          },\n          key: media.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardActionArea, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: media.path,\n          alt: media.alt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(CardContent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        }, media.name), /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }\n        }, media.description))), mediaArea];\n      }\n    });\n    return mediaArea;\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loadImages(media), media.forEach(item => /*#__PURE__*/React.createElement(Card, {\n    sx: {\n      maxWidth: 345\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    height: \"140\",\n    image: item.path,\n    alt: item.alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, item.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, item.description)))));\n};\nexport default MediaInspector;\n\n/**\r\n * \r\n * \r\n *     const loadImages = (map) => {\r\n        console.log(map)\r\n        //if !SSR\r\n\r\n        map.map(media => {\r\n            if (!media.serverSide) {\r\n               <Card sx={{ maxWidth: 345 }}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={media.path}\r\n                        alt=\"{media.alt}\"\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {media.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {media.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            }\r\n        });        \r\n    }\r\n */","map":{"version":3,"names":["React","useState","Typography","Fade","CardActionArea","CardMedia","Card","CardContent","ListItemIcon","ListIcon","PlayArrow","Pause","useDispatch","useHistory","useLocation","useStyles","ToggleButton","ToggleButtonGroup","MediaInspector","media","tabAnchor","loadImages","map","console","log","mediaArea","serverSide","maxWidth","name","path","alt","description","forEach","item"],"sources":["D:/Documents/Field-Benders-Website-Re/client/src/components/Chapters/Chapter/ControlPanel/MediaInspector/MediaInspector.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport { Typography, Fade, CardActionArea, CardMedia, Card, CardContent} from '@material-ui/core';\r\n\r\nimport ListItemIcon from '@material-ui/icons/ListOutlined';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport PlayArrow from'@material-ui/icons/PlayArrow';\r\nimport Pause from '@material-ui/icons/Pause';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\nimport useStyles from '../styles';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\n//TODO implement map -> (name, path, alt) => cards\r\n\r\n//TODO eventually implement mapping option for media to be selected from the db and load alt and title from there\r\n\r\n/**\r\n * \r\n * @param {*} media map filtered of form => [name, mediaSS, path, alt, type, description]\r\n * \r\n * @returns \r\n * @notes Could eventually support more than just image media\r\n */\r\n\r\nconst MediaInspector = ({media, tabAnchor}) => {\r\n    //cards with images and subtext over them, on hover tehy read alt text, on click they expand into the center\r\n    //media (name, path, alt) => props. name\r\n\r\n\r\n    //let anchor = tabAnchor;\r\n    const loadImages = (map) => {\r\n        console.log(map)\r\n        //if !SSR\r\n\r\n        let mediaArea = (\r\n            <>\r\n            </>\r\n        )\r\n        map.map(media => {\r\n            if (!media.serverSide) {\r\n                console.log(mediaArea)\r\n                mediaArea = [(\r\n                <Card sx={{ maxWidth: 345 }} key={media.name}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={media.path}\r\n                        alt={media.alt}\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {media.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {media.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Card> \r\n                ), mediaArea]\r\n            }\r\n        });  \r\n        \r\n        return mediaArea;   \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n         {loadImages(media)}\r\n\r\n            {media.forEach((item) => (\r\n                \r\n                    <Card sx={{ maxWidth: 345 }}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={item.path}\r\n                        alt={item.alt}\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {item.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {item.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card>\r\n\r\n                \r\n                \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MediaInspector;\r\n\r\n\r\n/**\r\n * \r\n * \r\n *     const loadImages = (map) => {\r\n        console.log(map)\r\n        //if !SSR\r\n\r\n        map.map(media => {\r\n            if (!media.serverSide) {\r\n               <Card sx={{ maxWidth: 345 }}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={media.path}\r\n                        alt=\"{media.alt}\"\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {media.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {media.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            }\r\n        });        \r\n    }\r\n */"],"mappings":"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"},"metadata":{},"sourceType":"module"}