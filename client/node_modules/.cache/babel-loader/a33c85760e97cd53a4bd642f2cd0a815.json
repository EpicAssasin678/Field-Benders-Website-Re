{"ast":null,"code":"import React,{useState}from'react';import{Typography,Fade,CardActionArea,CardMedia,Card,CardContent}from'@material-ui/core';import ListItemIcon from'@material-ui/icons/ListOutlined';import ListIcon from'@material-ui/icons/List';import PlayArrow from'@material-ui/icons/PlayArrow';import Pause from'@material-ui/icons/Pause';import{useDispatch}from'react-redux';import{useHistory,useLocation}from'react-router-dom';import useStyles from'../styles';import{ToggleButton,ToggleButtonGroup}from'@material-ui/lab';//TODO implement map -> (name, path, alt) => cards\n//TODO eventually implement mapping option for media to be selected from the db and load alt and title from there\n/**\r\n * \r\n * @param {*} media map filtered of form => [name, mediaSS, path, alt, type, description]\r\n * \r\n * @returns \r\n * @notes Could eventually support more than just image media\r\n */var MediaInspector=function MediaInspector(_ref){var media=_ref.media,tabAnchor=_ref.tabAnchor;//cards with images and subtext over them, on hover tehy read alt text, on click they expand into the center\n//media (name, path, alt) => props. name\nvar mediaStringPart='';//let anchor = tabAnchor;\nvar loadImages=function loadImages(map){console.log(map);//if !SSR\nvar mediaArea=/*#__PURE__*/React.createElement(React.Fragment,null);map.map(function(media){if(!media.serverSide){console.log(mediaArea);mediaArea=[/*#__PURE__*/React.createElement(Card,{sx:{maxWidth:345},key:media.name},/*#__PURE__*/React.createElement(CardActionArea,null,/*#__PURE__*/React.createElement(CardMedia,{component:\"img\",height:\"140\",image:media.path,alt:media.alt})),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{gutterBottom:true,variant:\"h5\",component:\"div\"},media.name),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\"},media.description))),mediaArea];}});return mediaArea;};return/*#__PURE__*/React.createElement(React.Fragment,null,loadImages(media),media.forEach(function(item){return/*#__PURE__*/React.createElement(Card,{sx:{maxWidth:345}},/*#__PURE__*/React.createElement(CardActionArea,null,/*#__PURE__*/React.createElement(CardMedia,{component:\"img\",height:\"140\",image:item.path,alt:item.alt})),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{gutterBottom:true,variant:\"h5\",component:\"div\"},item.name),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\"},item.description)));}));};export default MediaInspector;/**\r\n * \r\n * \r\n *     const loadImages = (map) => {\r\n        console.log(map)\r\n        //if !SSR\r\n\r\n        map.map(media => {\r\n            if (!media.serverSide) {\r\n               <Card sx={{ maxWidth: 345 }}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={media.path}\r\n                        alt=\"{media.alt}\"\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {media.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {media.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            }\r\n        });        \r\n    }\r\n */","map":{"version":3,"names":["React","useState","Typography","Fade","CardActionArea","CardMedia","Card","CardContent","ListItemIcon","ListIcon","PlayArrow","Pause","useDispatch","useHistory","useLocation","useStyles","ToggleButton","ToggleButtonGroup","MediaInspector","media","tabAnchor","mediaStringPart","loadImages","map","console","log","mediaArea","serverSide","maxWidth","name","path","alt","description","forEach","item"],"sources":["D:/Documents/Field-Benders-Website-Re/client/src/components/Chapters/Chapter/ControlPanel/MediaInspector/MediaInspector.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport { Typography, Fade, CardActionArea, CardMedia, Card, CardContent} from '@material-ui/core';\r\n\r\nimport ListItemIcon from '@material-ui/icons/ListOutlined';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport PlayArrow from'@material-ui/icons/PlayArrow';\r\nimport Pause from '@material-ui/icons/Pause';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\nimport useStyles from '../styles';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\n\r\n//TODO implement map -> (name, path, alt) => cards\r\n\r\n//TODO eventually implement mapping option for media to be selected from the db and load alt and title from there\r\n\r\n/**\r\n * \r\n * @param {*} media map filtered of form => [name, mediaSS, path, alt, type, description]\r\n * \r\n * @returns \r\n * @notes Could eventually support more than just image media\r\n */\r\n\r\nconst MediaInspector = ({media, tabAnchor}) => {\r\n    //cards with images and subtext over them, on hover tehy read alt text, on click they expand into the center\r\n    //media (name, path, alt) => props. name\r\n    const mediaStringPart = ''\r\n\r\n\r\n    //let anchor = tabAnchor;\r\n    const loadImages = (map) => {\r\n        console.log(map)\r\n        //if !SSR\r\n\r\n        let mediaArea = (\r\n            <>\r\n            </>\r\n        )\r\n        map.map(media => {\r\n            if (!media.serverSide) {\r\n                console.log(mediaArea)\r\n                \r\n                    mediaArea = [(\r\n                    <Card sx={{ maxWidth: 345 }} key={media.name}>\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                            component=\"img\"\r\n                            height=\"140\"\r\n                            image={media.path}\r\n                            alt={media.alt}\r\n                            />\r\n                        </CardActionArea>\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            {media.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            {media.description}\r\n                        </Typography>\r\n                        </CardContent>\r\n                    </Card> \r\n                    ), mediaArea]\r\n            }\r\n        });  \r\n        \r\n        return mediaArea;   \r\n    }\r\n\r\n    return (\r\n        <>\r\n         \r\n         {loadImages(media)}\r\n\r\n            {media.forEach((item) => (\r\n                \r\n                    <Card sx={{ maxWidth: 345 }}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={item.path}\r\n                        alt={item.alt}\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {item.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {item.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                    </Card> \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MediaInspector;\r\n\r\n\r\n/**\r\n * \r\n * \r\n *     const loadImages = (map) => {\r\n        console.log(map)\r\n        //if !SSR\r\n\r\n        map.map(media => {\r\n            if (!media.serverSide) {\r\n               <Card sx={{ maxWidth: 345 }}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                        component=\"img\"\r\n                        height=\"140\"\r\n                        image={media.path}\r\n                        alt=\"{media.alt}\"\r\n                        />\r\n                    </CardActionArea>\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {media.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {media.description}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            }\r\n        });        \r\n    }\r\n */"],"mappings":"AAAA,MAAOA,MAAK,EAAGC,QAAQ,KAAO,OAAO,CAErC,OAASC,UAAU,CAAEC,IAAI,CAAEC,cAAc,CAAEC,SAAS,CAAEC,IAAI,CAAEC,WAAW,KAAO,mBAAmB,CAEjG,MAAOC,aAAY,KAAM,iCAAiC,CAC1D,MAAOC,SAAQ,KAAM,yBAAyB,CAC9C,MAAOC,UAAS,KAAK,8BAA8B,CACnD,MAAOC,MAAK,KAAM,0BAA0B,CAC5C,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,UAAU,CAAEC,WAAW,KAAQ,kBAAkB,CAG1D,MAAOC,UAAS,KAAM,WAAW,CACjC,OAASC,YAAY,CAAEC,iBAAiB,KAAQ,kBAAkB,CAGlE;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,GAAMC,eAAc,CAAG,QAAjBA,eAAc,MAA2B,IAAtBC,MAAK,MAALA,KAAK,CAAEC,SAAS,MAATA,SAAS,CACrC;AACA;AACA,GAAMC,gBAAe,CAAG,EAAE,CAG1B;AACA,GAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,GAAG,CAAK,CACxBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAChB;AAEA,GAAIG,UAAS,cACT,wCAEH,CACDH,GAAG,CAACA,GAAG,CAAC,SAAAJ,KAAK,CAAI,CACb,GAAI,CAACA,KAAK,CAACQ,UAAU,CAAE,CACnBH,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC,CAElBA,SAAS,CAAG,cACZ,oBAAC,IAAI,EAAC,EAAE,CAAE,CAAEE,QAAQ,CAAE,GAAI,CAAE,CAAC,GAAG,CAAET,KAAK,CAACU,IAAK,eACzC,oBAAC,cAAc,mBACX,oBAAC,SAAS,EACV,SAAS,CAAC,KAAK,CACf,MAAM,CAAC,KAAK,CACZ,KAAK,CAAEV,KAAK,CAACW,IAAK,CAClB,GAAG,CAAEX,KAAK,CAACY,GAAI,EACb,CACW,cACjB,oBAAC,WAAW,mBACZ,oBAAC,UAAU,EAAC,YAAY,MAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAChDZ,KAAK,CAACU,IAAI,CACF,cACb,oBAAC,UAAU,EAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,EAC5CV,KAAK,CAACa,WAAW,CACT,CACC,CACX,CACJN,SAAS,CAAC,CACrB,CACJ,CAAC,CAAC,CAEF,MAAOA,UAAS,CACpB,CAAC,CAED,mBACI,wCAEEJ,UAAU,CAACH,KAAK,CAAC,CAEdA,KAAK,CAACc,OAAO,CAAC,SAACC,IAAI,qBAEZ,oBAAC,IAAI,EAAC,EAAE,CAAE,CAAEN,QAAQ,CAAE,GAAI,CAAE,eAC5B,oBAAC,cAAc,mBACX,oBAAC,SAAS,EACV,SAAS,CAAC,KAAK,CACf,MAAM,CAAC,KAAK,CACZ,KAAK,CAAEM,IAAI,CAACJ,IAAK,CACjB,GAAG,CAAEI,IAAI,CAACH,GAAI,EACZ,CACW,cACjB,oBAAC,WAAW,mBACZ,oBAAC,UAAU,EAAC,YAAY,MAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAChDG,IAAI,CAACL,IAAI,CACD,cACb,oBAAC,UAAU,EAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,EAC5CK,IAAI,CAACF,WAAW,CACR,CACC,CACP,EACd,CAAC,CACH,CAEX,CAAC,CAED,cAAed,eAAc,CAG7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}