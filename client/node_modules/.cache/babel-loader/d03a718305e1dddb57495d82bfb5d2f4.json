{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, DELETE, CREATE } from \"../constants/actionTypes\";\nimport * as api from '../api/index.js';\n\n//CREATE ACTIONS -> should follow the standard XMLHTTPRequest operation\n\nexport const getNewsPost = id => async dispatch => {\n  try {\n    console.log('actions: action getNewsPost was called');\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchNewsPost(id);\n    dispatch({\n      type: FETCH_NEWSPOST,\n      payload: {\n        newsPost: data\n      }\n    });\n    console.log(`got post ${data}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getNewsPosts = page => async dispatch => {\n  try {\n    console.log('actions: action getNewsPosts was called');\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchNewsPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createNewsPost = (newsPost, history) => async dispatch => {\n  try {\n    console.log('actions: action createNewsPosts was called');\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createNewsPost(newsPost);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/newsPosts/${data._id}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteNewsPost = id => async dispatch => {\n  try {\n    console.log('actions: action deleteNewsPost was called');\n    await await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["START_LOADING","END_LOADING","FETCH_POST","FETCH_ALL","DELETE","CREATE","api","getNewsPost","id","dispatch","console","log","type","data","fetchNewsPost","FETCH_NEWSPOST","payload","newsPost","error","getNewsPosts","page","currentPage","numberOfPages","fetchNewsPosts","createNewsPost","history","push","_id","deleteNewsPost","deletePost"],"sources":["D:/Documents/Field-Benders-Website-Re/client/src/actions/newsPosts.js"],"sourcesContent":["import { START_LOADING, END_LOADING, FETCH_POST, FETCH_ALL, DELETE, CREATE } from \"../constants/actionTypes\";\r\nimport * as api from '../api/index.js';\r\n\r\n//CREATE ACTIONS -> should follow the standard XMLHTTPRequest operation\r\n\r\nexport const getNewsPost = (id) => async (dispatch) => {\r\n    try {\r\n        console.log('actions: action getNewsPost was called');\r\n\r\n        dispatch({ type: START_LOADING })\r\n        const { data } = await api.fetchNewsPost(id);\r\n        dispatch({type: FETCH_NEWSPOST, payload: { newsPost: data }});\r\n        console.log(`got post ${data}`);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getNewsPosts = (page) => async (dispatch) => {\r\n    try {\r\n        console.log('actions: action getNewsPosts was called');\r\n\r\n        dispatch({ type: START_LOADING });\r\n        const {data : {data, currentPage, numberOfPages }} = await api.fetchNewsPosts(page);\r\n\r\n        dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages }});\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const createNewsPost = (newsPost, history) => async (dispatch) => {\r\n    try {\r\n      console.log('actions: action createNewsPosts was called');\r\n\r\n      dispatch({ type: START_LOADING });\r\n      const { data } = await api.createNewsPost(newsPost);\r\n  \r\n      dispatch({ type: CREATE, payload: data });\r\n  \r\n      history.push(`/newsPosts/${data._id}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n};\r\n\r\nexport const deleteNewsPost = (id) => async (dispatch) => {\r\n    try {\r\n      console.log('actions: action deleteNewsPost was called');\r\n\r\n      await await api.deletePost(id);\r\n  \r\n      dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n};\r\n  \r\n\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,QAAQ,0BAA0B;AAC5G,OAAO,KAAKC,GAAG,MAAM,iBAAiB;;AAEtC;;AAEA,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAK,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IAErDF,QAAQ,CAAC;MAAEG,IAAI,EAAEZ;IAAc,CAAC,CAAC;IACjC,MAAM;MAAEa;IAAK,CAAC,GAAG,MAAMP,GAAG,CAACQ,aAAa,CAACN,EAAE,CAAC;IAC5CC,QAAQ,CAAC;MAACG,IAAI,EAAEG,cAAc;MAAEC,OAAO,EAAE;QAAEC,QAAQ,EAAEJ;MAAK;IAAC,CAAC,CAAC;IAC7DH,OAAO,CAACC,GAAG,CAAE,YAAWE,IAAK,EAAC,CAAC;EACnC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK,MAAOX,QAAQ,IAAK;EACtD,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IAEtDF,QAAQ,CAAC;MAAEG,IAAI,EAAEZ;IAAc,CAAC,CAAC;IACjC,MAAM;MAACa,IAAI,EAAG;QAACA,IAAI;QAAEQ,WAAW;QAAEC;MAAc;IAAC,CAAC,GAAG,MAAMhB,GAAG,CAACiB,cAAc,CAACH,IAAI,CAAC;IAEnFX,QAAQ,CAAC;MAAEG,IAAI,EAAET,SAAS;MAAEa,OAAO,EAAE;QAAEH,IAAI;QAAEQ,WAAW;QAAEC;MAAc;IAAC,CAAC,CAAC;IAC3Eb,QAAQ,CAAC;MAAEG,IAAI,EAAEX;IAAY,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACZR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,CAACP,QAAQ,EAAEQ,OAAO,KAAK,MAAOhB,QAAQ,IAAK;EACrE,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAEzDF,QAAQ,CAAC;MAAEG,IAAI,EAAEZ;IAAc,CAAC,CAAC;IACjC,MAAM;MAAEa;IAAK,CAAC,GAAG,MAAMP,GAAG,CAACkB,cAAc,CAACP,QAAQ,CAAC;IAEnDR,QAAQ,CAAC;MAAEG,IAAI,EAAEP,MAAM;MAAEW,OAAO,EAAEH;IAAK,CAAC,CAAC;IAEzCY,OAAO,CAACC,IAAI,CAAE,cAAab,IAAI,CAACc,GAAI,EAAC,CAAC;EACxC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EACpB;AACJ,CAAC;AAED,OAAO,MAAMU,cAAc,GAAIpB,EAAE,IAAK,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAExD,MAAM,MAAML,GAAG,CAACuB,UAAU,CAACrB,EAAE,CAAC;IAE9BC,QAAQ,CAAC;MAAEG,IAAI,EAAER,MAAM;MAAEY,OAAO,EAAER;IAAG,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}